/**
 *@Generated by sagacity-quickvo 5.0
 */
package com.jwss.system.entity.base;

import java.io.Serializable;
import java.util.List;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;
import java.math.BigInteger;
import java.time.LocalDateTime;

/**
 * @project sss-rbac-admin
 * @version 1.0.0
 * Table: sys_role,Remark:系统角色表  
 */
@Entity(tableName="sys_role",pk_constraint="PRIMARY")
public abstract class AbstractRole implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 5315182758465454759L;
	
	/**
	 * jdbcType:BIGINT
	 * 角色ID
	 */
	@Id
	@Column(name="role_id",length=19L,type=java.sql.Types.BIGINT,nullable=false,autoIncrement=true)
	protected BigInteger roleId;
	
	/**
	 * jdbcType:VARCHAR
	 * 角色名称
	 */
	@Column(name="role_name",length=30L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String roleName;
	
	/**
	 * jdbcType:VARCHAR
	 * 角色权限字符串
	 */
	@Column(name="role_key",length=100L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String roleKey;
	
	/**
	 * jdbcType:INT
	 * 显示顺序
	 */
	@Column(name="role_sort",length=10L,type=java.sql.Types.INTEGER,nullable=false)
	protected Integer roleSort;
	
	/**
	 * jdbcType:CHAR
	 * 数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	 */
	@Column(name="data_scope",length=1L,defaultValue="1",type=java.sql.Types.CHAR,nullable=true)
	protected String dataScope;
	
	/**
	 * jdbcType:BIT
	 * 菜单树选择项是否关联显示
	 */
	@Column(name="menu_check_strictly",length=1L,defaultValue="1",type=java.sql.Types.BIT,nullable=true)
	protected Boolean menuCheckStrictly;
	
	/**
	 * jdbcType:BIT
	 * 部门树选择项是否关联显示
	 */
	@Column(name="dept_check_strictly",length=1L,defaultValue="1",type=java.sql.Types.BIT,nullable=true)
	protected Boolean deptCheckStrictly;
	
	/**
	 * jdbcType:CHAR
	 * 角色状态（0正常 1停用）
	 */
	@Column(name="status",length=1L,type=java.sql.Types.CHAR,nullable=false)
	protected String status;
	
	/**
	 * jdbcType:CHAR
	 * 删除标志（0代表存在 2代表删除）
	 */
	@Column(name="del_flag",length=1L,defaultValue="0",type=java.sql.Types.CHAR,nullable=true)
	protected String delFlag;
	
	/**
	 * jdbcType:VARCHAR
	 * 创建者
	 */
	@Column(name="create_by",length=64L,defaultValue="",type=java.sql.Types.VARCHAR,nullable=true)
	protected String createBy;
	
	/**
	 * jdbcType:DATETIME
	 * 创建时间
	 */
	@Column(name="create_time",length=19L,type=java.sql.Types.DATE,nullable=true)
	protected LocalDateTime createTime;
	
	/**
	 * jdbcType:VARCHAR
	 * 更新者
	 */
	@Column(name="update_by",length=64L,defaultValue="",type=java.sql.Types.VARCHAR,nullable=true)
	protected String updateBy;
	
	/**
	 * jdbcType:DATETIME
	 * 更新时间
	 */
	@Column(name="update_time",length=19L,type=java.sql.Types.DATE,nullable=true)
	protected LocalDateTime updateTime;
	
	/**
	 * jdbcType:VARCHAR
	 * 备注
	 */
	@Column(name="remark",length=500L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String remark;
	
	/**
	 * jdbcType:VARCHAR
	 * 主键id
	 */
	@Id
	@Column(name="ID",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String id;
	
	/**
	 * jdbcType:INT
	 * 乐观锁
	 */
	@Column(name="REVISION",length=10L,type=java.sql.Types.INTEGER,nullable=true)
	protected Integer revision;
	
	/**
	 * jdbcType:VARCHAR
	 * 创建人
	 */
	@Column(name="CREATE_BY",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String createBy;
	
	/**
	 * jdbcType:DATETIME
	 * 创建时间
	 */
	@Column(name="CREATE_TIME",length=19L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDateTime createTime;
	
	/**
	 * jdbcType:VARCHAR
	 * 更新人
	 */
	@Column(name="UPDATE_BY",length=32L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String updateBy;
	
	/**
	 * jdbcType:DATETIME
	 * 更新时间
	 */
	@Column(name="UPDATE_TIME",length=19L,type=java.sql.Types.DATE,nullable=true)
	protected LocalDateTime updateTime;
	
	/**
	 * jdbcType:CHAR
	 * 删除状态;0删除 1未删除
	 */
	@Column(name="DELETE_STATUS",length=1L,type=java.sql.Types.CHAR,nullable=false)
	protected String deleteStatus;
	
	/**
	 * jdbcType:VARCHAR
	 * 角色名称
	 */
	@Column(name="ROLE_NAME",length=30L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String roleName;
	
	/**
	 * jdbcType:VARCHAR
	 * 角色标识
	 */
	@Column(name="ROLE_KEY",length=255L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String roleKey;
	
	/**
	 * jdbcType:INT
	 * 显示排序
	 */
	@Column(name="SORT",length=10L,type=java.sql.Types.INTEGER,nullable=false)
	protected Integer sort;
	
	/**
	 * jdbcType:VARCHAR
	 * 备注
	 */
	@Column(name="REMARK",length=255L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String remark;
	
	/** default constructor */
	public AbstractRole() {
	}
	
	/** pk constructor */
	public AbstractRole(BigInteger roleId,String id)
	{
		this.roleId=roleId;
		this.id=id;
	}
	
	/**
	 *@param roleId the roleId to set
	 */
	public void setRoleId(BigInteger roleId) {
		this.roleId=roleId;
	}
		
	/**
	 *@return the RoleId
	 */
	public BigInteger getRoleId() {
	    return this.roleId;
	}
	
	/**
	 *@param roleName the roleName to set
	 */
	public void setRoleName(String roleName) {
		this.roleName=roleName;
	}
		
	/**
	 *@return the RoleName
	 */
	public String getRoleName() {
	    return this.roleName;
	}
	
	/**
	 *@param roleKey the roleKey to set
	 */
	public void setRoleKey(String roleKey) {
		this.roleKey=roleKey;
	}
		
	/**
	 *@return the RoleKey
	 */
	public String getRoleKey() {
	    return this.roleKey;
	}
	
	/**
	 *@param roleSort the roleSort to set
	 */
	public void setRoleSort(Integer roleSort) {
		this.roleSort=roleSort;
	}
		
	/**
	 *@return the RoleSort
	 */
	public Integer getRoleSort() {
	    return this.roleSort;
	}
	
	/**
	 *@param dataScope the dataScope to set
	 */
	public void setDataScope(String dataScope) {
		this.dataScope=dataScope;
	}
		
	/**
	 *@return the DataScope
	 */
	public String getDataScope() {
	    return this.dataScope;
	}
	
	/**
	 *@param menuCheckStrictly the menuCheckStrictly to set
	 */
	public void setMenuCheckStrictly(Boolean menuCheckStrictly) {
		this.menuCheckStrictly=menuCheckStrictly;
	}
		
	/**
	 *@return the MenuCheckStrictly
	 */
	public Boolean getMenuCheckStrictly() {
	    return this.menuCheckStrictly;
	}
	
	/**
	 *@param deptCheckStrictly the deptCheckStrictly to set
	 */
	public void setDeptCheckStrictly(Boolean deptCheckStrictly) {
		this.deptCheckStrictly=deptCheckStrictly;
	}
		
	/**
	 *@return the DeptCheckStrictly
	 */
	public Boolean getDeptCheckStrictly() {
	    return this.deptCheckStrictly;
	}
	
	/**
	 *@param status the status to set
	 */
	public void setStatus(String status) {
		this.status=status;
	}
		
	/**
	 *@return the Status
	 */
	public String getStatus() {
	    return this.status;
	}
	
	/**
	 *@param delFlag the delFlag to set
	 */
	public void setDelFlag(String delFlag) {
		this.delFlag=delFlag;
	}
		
	/**
	 *@return the DelFlag
	 */
	public String getDelFlag() {
	    return this.delFlag;
	}
	
	/**
	 *@param createBy the createBy to set
	 */
	public void setCreateBy(String createBy) {
		this.createBy=createBy;
	}
		
	/**
	 *@return the CreateBy
	 */
	public String getCreateBy() {
	    return this.createBy;
	}
	
	/**
	 *@param createTime the createTime to set
	 */
	public void setCreateTime(LocalDateTime createTime) {
		this.createTime=createTime;
	}
		
	/**
	 *@return the CreateTime
	 */
	public LocalDateTime getCreateTime() {
	    return this.createTime;
	}
	
	/**
	 *@param updateBy the updateBy to set
	 */
	public void setUpdateBy(String updateBy) {
		this.updateBy=updateBy;
	}
		
	/**
	 *@return the UpdateBy
	 */
	public String getUpdateBy() {
	    return this.updateBy;
	}
	
	/**
	 *@param updateTime the updateTime to set
	 */
	public void setUpdateTime(LocalDateTime updateTime) {
		this.updateTime=updateTime;
	}
		
	/**
	 *@return the UpdateTime
	 */
	public LocalDateTime getUpdateTime() {
	    return this.updateTime;
	}
	
	/**
	 *@param remark the remark to set
	 */
	public void setRemark(String remark) {
		this.remark=remark;
	}
		
	/**
	 *@return the Remark
	 */
	public String getRemark() {
	    return this.remark;
	}
	
	/**
	 *@param id the id to set
	 */
	public void setId(String id) {
		this.id=id;
	}
		
	/**
	 *@return the Id
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 *@param revision the revision to set
	 */
	public void setRevision(Integer revision) {
		this.revision=revision;
	}
		
	/**
	 *@return the Revision
	 */
	public Integer getRevision() {
	    return this.revision;
	}
	
	/**
	 *@param createBy the createBy to set
	 */
	public void setCreateBy(String createBy) {
		this.createBy=createBy;
	}
		
	/**
	 *@return the CreateBy
	 */
	public String getCreateBy() {
	    return this.createBy;
	}
	
	/**
	 *@param createTime the createTime to set
	 */
	public void setCreateTime(LocalDateTime createTime) {
		this.createTime=createTime;
	}
		
	/**
	 *@return the CreateTime
	 */
	public LocalDateTime getCreateTime() {
	    return this.createTime;
	}
	
	/**
	 *@param updateBy the updateBy to set
	 */
	public void setUpdateBy(String updateBy) {
		this.updateBy=updateBy;
	}
		
	/**
	 *@return the UpdateBy
	 */
	public String getUpdateBy() {
	    return this.updateBy;
	}
	
	/**
	 *@param updateTime the updateTime to set
	 */
	public void setUpdateTime(LocalDateTime updateTime) {
		this.updateTime=updateTime;
	}
		
	/**
	 *@return the UpdateTime
	 */
	public LocalDateTime getUpdateTime() {
	    return this.updateTime;
	}
	
	/**
	 *@param deleteStatus the deleteStatus to set
	 */
	public void setDeleteStatus(String deleteStatus) {
		this.deleteStatus=deleteStatus;
	}
		
	/**
	 *@return the DeleteStatus
	 */
	public String getDeleteStatus() {
	    return this.deleteStatus;
	}
	
	/**
	 *@param roleName the roleName to set
	 */
	public void setRoleName(String roleName) {
		this.roleName=roleName;
	}
		
	/**
	 *@return the RoleName
	 */
	public String getRoleName() {
	    return this.roleName;
	}
	
	/**
	 *@param roleKey the roleKey to set
	 */
	public void setRoleKey(String roleKey) {
		this.roleKey=roleKey;
	}
		
	/**
	 *@return the RoleKey
	 */
	public String getRoleKey() {
	    return this.roleKey;
	}
	
	/**
	 *@param sort the sort to set
	 */
	public void setSort(Integer sort) {
		this.sort=sort;
	}
		
	/**
	 *@return the Sort
	 */
	public Integer getSort() {
	    return this.sort;
	}
	
	/**
	 *@param remark the remark to set
	 */
	public void setRemark(String remark) {
		this.remark=remark;
	}
		
	/**
	 *@return the Remark
	 */
	public String getRemark() {
	    return this.remark;
	}


	/**
     * @todo vo columns to String
     */
    @Override
	public String toString() {
		StringBuilder columnsBuffer=new StringBuilder();
		columnsBuffer.append("roleId=").append(getRoleId()).append("\n");
		columnsBuffer.append("roleName=").append(getRoleName()).append("\n");
		columnsBuffer.append("roleKey=").append(getRoleKey()).append("\n");
		columnsBuffer.append("roleSort=").append(getRoleSort()).append("\n");
		columnsBuffer.append("dataScope=").append(getDataScope()).append("\n");
		columnsBuffer.append("menuCheckStrictly=").append(getMenuCheckStrictly()).append("\n");
		columnsBuffer.append("deptCheckStrictly=").append(getDeptCheckStrictly()).append("\n");
		columnsBuffer.append("status=").append(getStatus()).append("\n");
		columnsBuffer.append("delFlag=").append(getDelFlag()).append("\n");
		columnsBuffer.append("createBy=").append(getCreateBy()).append("\n");
		columnsBuffer.append("createTime=").append(getCreateTime()).append("\n");
		columnsBuffer.append("updateBy=").append(getUpdateBy()).append("\n");
		columnsBuffer.append("updateTime=").append(getUpdateTime()).append("\n");
		columnsBuffer.append("remark=").append(getRemark()).append("\n");
		columnsBuffer.append("id=").append(getId()).append("\n");
		columnsBuffer.append("revision=").append(getRevision()).append("\n");
		columnsBuffer.append("createBy=").append(getCreateBy()).append("\n");
		columnsBuffer.append("createTime=").append(getCreateTime()).append("\n");
		columnsBuffer.append("updateBy=").append(getUpdateBy()).append("\n");
		columnsBuffer.append("updateTime=").append(getUpdateTime()).append("\n");
		columnsBuffer.append("deleteStatus=").append(getDeleteStatus()).append("\n");
		columnsBuffer.append("roleName=").append(getRoleName()).append("\n");
		columnsBuffer.append("roleKey=").append(getRoleKey()).append("\n");
		columnsBuffer.append("sort=").append(getSort()).append("\n");
		columnsBuffer.append("remark=").append(getRemark()).append("\n");
		return columnsBuffer.toString();
	}
	
}
